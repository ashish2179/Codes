// knapsack problem.
#include<stdio.h> 
void knap(int n,float wt[],float profit[],float capacity)
{
float a[20],tp=0;
int i,j,u;
u=capacity;
for(i=0;i<n;i++)
a[i]=0.0;
for (i = 0; i<n;i++)
{
if(wt[i]>u)
break;
else
{
a[i]=1.0;
tp=tp+profit[i];
u=u-wt[i];
}
}
if(i<n)
a[i]=u/wt[i];
tp=tp+(a[i]*profit[i]);
printf("\nThe result vector is:");
for(i=0;i<n;i++)
printf("%f\t",x[i]);
printf("\nMaximum profit is:%f",tp);
} 
int main()
{
float wt[20],profit[20],capacity;
int num,i,j;
float ratio[20],temp;
printf("\nEnter the no. of objects:");
scanf("%d",&num);
printf("\nEnter the wts and profits of each object:");
for (i=0;i<num;i++) 
{
scanf("%f %f",&wt[i],&profit[i]);
}
printf("\nEnter the capacity of knapsack:");
scanf("%f",&capacity);
for (i=0;i<num;i++) 
{
ratio[i]=profit[i]/wt[i];
}
for(i=0;i<num;i++) 
{
for (j=i+1;j<num;j++) 
{
if (ratio[i]<ratio[j]) 
{
temp=ratio[j];
ratio[j]=ratio[i];
ratio[i]=temp;
temp=wt[j];
wt[j]=wt[i];
wt[i]=temp;
temp=profit[j];
profit[j]=profit[i];
profit[i]=temp;
}
}
}
knap(num,wt,profit,capacity);
getch();
}
